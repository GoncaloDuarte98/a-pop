{"ast":null,"code":"var _jsxFileName = \"/home/goncalo/Desktop/FirstTimers/a-pop/src/components/SongPlayer.js\";\nimport React from \"react\";\nimport Playlist from \"./Playlist\";\nimport { Card, CardContent, Typography, IconButton, Slider, CardMedia, makeStyles, useMediaQuery } from \"@material-ui/core\";\nimport { SkipPrevious, PlayArrow, SkipNext, Pause, RepeatOne, Repeat } from \"@material-ui/icons\";\nimport { SongContext } from \"../App\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_PLAYLIST_SONGS } from \"../graphql/queries\";\nimport ReactPlayer from \"react-player\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0px 15px\"\n  },\n  content: {\n    flex: \"1 0 auto\"\n  },\n  thumbnail: {\n    width: 150\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  playIcon: {\n    height: 38,\n    width: 38\n  }\n}));\n\nfunction SongPlayer() {\n  const classes = useStyles();\n  const [playedSeconds, setPlayedSeconds] = React.useState(0);\n  const reactPlayerRef = React.useRef();\n  const [played, setPlayed] = React.useState(0);\n  const [seeking, setSeeking] = React.useState(false);\n  const {\n    data\n  } = useQuery(GET_PLAYLIST_SONGS);\n  const {\n    state,\n    dispatch\n  } = React.useContext(SongContext);\n  const [postionInPlaylist, setPostionInPlaylist] = React.useState(0);\n  const [displayPlaylist, setDisplayPlaylist] = React.useState(\"none\");\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up(\"md\")); // It dispatches a new action\n\n  function handleSongPlay() {\n    dispatch(state.isPlaying ? {\n      type: \"PAUSE_SONG\"\n    } : {\n      type: \"PLAY_SONG\"\n    });\n  } // slider provides newValue prop\n\n\n  function handleMusicChange(event, newValue) {\n    setPlayed(newValue);\n  }\n\n  function handleSeekMouseDown() {\n    setSeeking(true);\n  }\n\n  function handleSeekMouseUp() {\n    setSeeking(false);\n    reactPlayerRef.current.seekTo(played);\n  }\n\n  function formatDuration(seconds) {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  }\n\n  function handlePlayPrevSong() {\n    const prevSong = data.playlist[postionInPlaylist - 1];\n\n    if (prevSong) {\n      dispatch({\n        type: \"SET_SONG\",\n        payload: {\n          song: prevSong\n        }\n      });\n    }\n  }\n\n  function handlePlayNextSong() {\n    const nextSong = data.playlist[postionInPlaylist + 1];\n\n    if (nextSong) {\n      dispatch({\n        type: \"SET_SONG\",\n        payload: {\n          song: nextSong\n        }\n      });\n    }\n  }\n\n  function handleRepeatOn() {\n    dispatch(state.isRepeating ? {\n      type: \"REPEAT_OFF\"\n    } : {\n      type: \"REPEAT_ON\"\n    });\n  }\n\n  function handleDisplayPlaylist() {\n    if (!greaterThanMd) {\n      if (displayPlaylist === \"none\") setDisplayPlaylist(\"block\");else setDisplayPlaylist(\"none\");\n    }\n  }\n\n  React.useEffect(() => {\n    const songIndex = data.playlist.findIndex(song => song.id === state.song.id);\n    setPostionInPlaylist(songIndex);\n  }, [data.playlist, state.song.id]); // logic to play for next song\n\n  React.useEffect(() => {\n    const nextSong = data.playlist[postionInPlaylist + 1]; // After finishing, played song becomes 1\n\n    /* SINGLE SONG REPEAT */\n\n    if (played >= 0.999) {\n      if (state.isRepeating) {\n        setPlayed(0);\n        reactPlayerRef.current.seekTo(played);\n      } else if (!state.isRepeating && nextSong) {\n        setPlayed(0);\n        dispatch({\n          type: \"SET_SONG\",\n          payload: {\n            song: nextSong\n          }\n        });\n      }\n    }\n  }, [state, data.playlist, played, dispatch, postionInPlaylist]);\n  React.useEffect(() => {\n    /* Only target desktop device */\n    if (window.screen.width >= 1280) {\n      window.onkeydown = function (e) {\n        /* Only target spacebar click on \"body\" to not interfer with \"input\", \"button\", (...) elements */\n        if (e.target === document.body && (e.keyCode || e.wich) === 32) {\n          e.preventDefault();\n          handleSongPlay();\n        }\n      };\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    className: classes.container,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    onClick: handleDisplayPlaylist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, state.song.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    component: \"p\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, state.song.artist)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handlePlayPrevSong,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SkipPrevious, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleSongPlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, state.isPlaying ? /*#__PURE__*/React.createElement(Pause, {\n    className: classes.playIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(PlayArrow, {\n    className: classes.playIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handlePlayNextSong,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SkipNext, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleRepeatOn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, state.isRepeating ? /*#__PURE__*/React.createElement(RepeatOne, {\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Repeat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    component: \"p\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, formatDuration(playedSeconds))), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 40,\n    value: played,\n    onPointerUp: handleSeekMouseUp,\n    onPointerDown: handleSeekMouseDown,\n    onMouseDown: handleSeekMouseDown,\n    onMouseUp: handleSeekMouseUp,\n    onChange: handleMusicChange,\n    type: \"range\",\n    min: 0,\n    max: 1,\n    step: 0.01,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ReactPlayer, {\n    ref: reactPlayerRef,\n    onProgress: ({\n      played,\n      playedSeconds\n    }) => {\n      if (!seeking) {\n        setPlayed(played);\n        setPlayedSeconds(playedSeconds);\n      }\n    },\n    url: state.song.url,\n    playing: state.isPlaying,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.thumbnail,\n    image: state.song.thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  })), greaterThanMd ? /*#__PURE__*/React.createElement(Playlist, {\n    playlist: data.playlist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: displayPlaylist\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Playlist, {\n    playlist: data.playlist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default SongPlayer;","map":{"version":3,"sources":["/home/goncalo/Desktop/FirstTimers/a-pop/src/components/SongPlayer.js"],"names":["React","Playlist","Card","CardContent","Typography","IconButton","Slider","CardMedia","makeStyles","useMediaQuery","SkipPrevious","PlayArrow","SkipNext","Pause","RepeatOne","Repeat","SongContext","useQuery","GET_PLAYLIST_SONGS","ReactPlayer","useStyles","theme","container","display","justifyContent","details","flexDirection","padding","content","flex","thumbnail","width","controls","alignItems","paddingLeft","spacing","paddingRight","playIcon","height","SongPlayer","classes","playedSeconds","setPlayedSeconds","useState","reactPlayerRef","useRef","played","setPlayed","seeking","setSeeking","data","state","dispatch","useContext","postionInPlaylist","setPostionInPlaylist","displayPlaylist","setDisplayPlaylist","greaterThanMd","breakpoints","up","handleSongPlay","isPlaying","type","handleMusicChange","event","newValue","handleSeekMouseDown","handleSeekMouseUp","current","seekTo","formatDuration","seconds","Date","toISOString","substr","handlePlayPrevSong","prevSong","playlist","payload","song","handlePlayNextSong","nextSong","handleRepeatOn","isRepeating","handleDisplayPlaylist","useEffect","songIndex","findIndex","id","window","screen","onkeydown","e","target","document","body","keyCode","wich","preventDefault","title","artist","color","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Playlist from \"./Playlist\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  IconButton,\n  Slider,\n  CardMedia,\n  makeStyles,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport {\n  SkipPrevious,\n  PlayArrow,\n  SkipNext,\n  Pause,\n  RepeatOne,\n  Repeat,\n} from \"@material-ui/icons\";\nimport { SongContext } from \"../App\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_PLAYLIST_SONGS } from \"../graphql/queries\";\nimport ReactPlayer from \"react-player\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0px 15px\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  thumbnail: {\n    width: 150,\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nfunction SongPlayer() {\n  const classes = useStyles();\n\n  const [playedSeconds, setPlayedSeconds] = React.useState(0);\n  const reactPlayerRef = React.useRef();\n  const [played, setPlayed] = React.useState(0);\n  const [seeking, setSeeking] = React.useState(false);\n  const { data } = useQuery(GET_PLAYLIST_SONGS);\n  const { state, dispatch } = React.useContext(SongContext);\n  const [postionInPlaylist, setPostionInPlaylist] = React.useState(0);\n  const [displayPlaylist, setDisplayPlaylist] = React.useState(\"none\");\n  const greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\n\n  // It dispatches a new action\n  function handleSongPlay() {\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\n  }\n  // slider provides newValue prop\n  function handleMusicChange(event, newValue) {\n    setPlayed(newValue);\n  }\n\n  function handleSeekMouseDown() {\n    setSeeking(true);\n  }\n\n  function handleSeekMouseUp() {\n    setSeeking(false);\n    reactPlayerRef.current.seekTo(played);\n  }\n\n  function formatDuration(seconds) {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  }\n\n  function handlePlayPrevSong() {\n    const prevSong = data.playlist[postionInPlaylist - 1];\n    if (prevSong) {\n      dispatch({ type: \"SET_SONG\", payload: { song: prevSong } });\n    }\n  }\n\n  function handlePlayNextSong() {\n    const nextSong = data.playlist[postionInPlaylist + 1];\n    if (nextSong) {\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\n    }\n  }\n\n  function handleRepeatOn() {\n    dispatch(\n      state.isRepeating ? { type: \"REPEAT_OFF\" } : { type: \"REPEAT_ON\" }\n    );\n  }\n\n  function handleDisplayPlaylist() {\n    if (!greaterThanMd) {\n      if (displayPlaylist === \"none\") setDisplayPlaylist(\"block\");\n      else setDisplayPlaylist(\"none\");\n    }\n  }\n\n  React.useEffect(() => {\n    const songIndex = data.playlist.findIndex(\n      (song) => song.id === state.song.id\n    );\n    setPostionInPlaylist(songIndex);\n  }, [data.playlist, state.song.id]);\n\n  // logic to play for next song\n  React.useEffect(() => {\n    const nextSong = data.playlist[postionInPlaylist + 1];\n\n    // After finishing, played song becomes 1\n\n    /* SINGLE SONG REPEAT */\n    if (played >= 0.999) {\n      if (state.isRepeating) {\n        setPlayed(0);\n        reactPlayerRef.current.seekTo(played);\n      } else if (!state.isRepeating && nextSong) {\n        setPlayed(0);\n        dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\n      }\n    }\n  }, [state, data.playlist, played, dispatch, postionInPlaylist]);\n\n  React.useEffect(() => {\n    /* Only target desktop device */\n    if (window.screen.width >= 1280) {\n      window.onkeydown = function (e) {\n        /* Only target spacebar click on \"body\" to not interfer with \"input\", \"button\", (...) elements */\n        if (e.target === document.body && (e.keyCode || e.wich) === 32) {\n          e.preventDefault();\n          handleSongPlay();\n        }\n      };\n    }\n  });\n\n  return (\n    <>\n      <Card className={classes.container} variant=\"outlined\">\n        <div className={classes.details}>\n          <CardContent\n            className={classes.content}\n            onClick={handleDisplayPlaylist}\n          >\n            <Typography variant=\"h5\" component=\"h3\">\n              {state.song.title}\n            </Typography>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {state.song.artist}\n            </Typography>\n          </CardContent>\n          <div className={classes.controls}>\n            <IconButton onClick={handlePlayPrevSong}>\n              <SkipPrevious />\n            </IconButton>\n            <IconButton onClick={handleSongPlay}>\n              {state.isPlaying ? (\n                <Pause className={classes.playIcon} />\n              ) : (\n                <PlayArrow className={classes.playIcon} />\n              )}\n            </IconButton>\n            <IconButton onClick={handlePlayNextSong}>\n              <SkipNext />\n            </IconButton>\n            <IconButton onClick={handleRepeatOn}>\n              {state.isRepeating ? (\n                <RepeatOne style={{ color: \"green\" }} />\n              ) : (\n                <Repeat />\n              )}\n            </IconButton>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {formatDuration(playedSeconds)}\n            </Typography>\n          </div>\n          <Slider\n            defaultValue={40}\n            value={played}\n            onPointerUp={handleSeekMouseUp}\n            onPointerDown={handleSeekMouseDown}\n            onMouseDown={handleSeekMouseDown}\n            onMouseUp={handleSeekMouseUp}\n            onChange={handleMusicChange}\n            type=\"range\"\n            min={0}\n            max={1}\n            step={0.01}\n          />\n        </div>\n        <ReactPlayer\n          ref={reactPlayerRef}\n          onProgress={({ played, playedSeconds }) => {\n            if (!seeking) {\n              setPlayed(played);\n              setPlayedSeconds(playedSeconds);\n            }\n          }}\n          url={state.song.url}\n          playing={state.isPlaying}\n          hidden\n        />\n        <CardMedia className={classes.thumbnail} image={state.song.thumbnail} />\n      </Card>\n      {greaterThanMd ? (\n        <Playlist playlist={data.playlist} />\n      ) : (\n        <div style={{ display: displayPlaylist }}>\n          <Playlist playlist={data.playlist} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default SongPlayer;\n"]},"metadata":{},"sourceType":"module"}