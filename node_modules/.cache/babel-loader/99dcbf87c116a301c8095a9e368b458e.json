{"ast":null,"code":"var _jsxFileName = \"/home/goncalo/Desktop/FirstTimers/a-pop/src/components/SongList.js\";\nimport React from \"react\";\nimport { Card, CardMedia, CardContent, Typography, CardActions, IconButton, makeStyles, TextField, InputAdornment } from \"@material-ui/core\";\nimport { PlayArrow, Pause, Search } from \"@material-ui/icons\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useSubscription, useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { GET_SONGS } from \"../graphql/subscriptions\";\nimport { SongContext } from \"../App\";\nimport { REMOVE_OR_ADD_FROM_PLAYLIST } from \"../graphql/mutations\";\nimport { GET_PLAYLIST_SONGS } from \"../graphql/queries\";\nimport PlaylistAddOutlinedIcon from \"@material-ui/icons/PlaylistAddOutlined\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nconst useStyles = makeStyles(theme => ({\n  containerSearch: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  textInput: {\n    margin: theme.spacing(1)\n  },\n  containerSongList: {\n    margin: theme.spacing(3)\n  },\n  songInfoContainer: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  songInfo: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  skeletonSongInfo: {\n    width: \"100%\",\n    justifyContent: \"space-between\"\n  },\n  thumbnail: {\n    objectFit: \"cover\",\n    width: 140,\n    height: 140\n  }\n}));\n\nfunction SongList() {\n  //But now we are subscribing to new data changes\n  const {\n    data,\n    loading,\n    error\n  } = useSubscription(GET_SONGS);\n  const {\n    data: {\n      playlist\n    }\n  } = useQuery(GET_PLAYLIST_SONGS);\n  const classes = useStyles(); // Integrating Search bar inside SongList component\n  // for easier functionality / Implementation\n\n  const [searchTerm, setSearchTerm] = React.useState(\"\"); // const song = {\n  //     title: 'Abhishek',\n  //     artist: 'Naidu',\n  //     thumbnail: 'https://avatars0.githubusercontent.com/u/55599878?s=460&u=ed7ab421e2b7b0fdc9fd0ddeae2f73feeb72eede&v=4'\n  // }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    }, \"Error fetching songs\");\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.containerSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textInput,\n      placeholder: \"Search for a song by name!\",\n      fullWidth: true,\n      margin: \"normal\",\n      type: \"text\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Search, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })), [...Array(50)].map(i => /*#__PURE__*/React.createElement(SkeletonList, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  function SkeletonList() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.containerSongList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.songInfoContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 140,\n      height: 140,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.skeletonSongInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h3\",\n      variant: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      component: \"p\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      width: \"30%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n  function handleEditSearchTerm(sch) {\n    setSearchTerm(sch.target.value);\n  }\n\n  function handleDynamicSearch() {\n    return data.songs.filter(song => song.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  }\n\n  function isInPlaylist({\n    id: idRef\n  }) {\n    return playlist.some(song => song.id === idRef);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.containerSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.textInput,\n    value: searchTerm,\n    onChange: handleEditSearchTerm,\n    placeholder: \"Search for a song by name!\",\n    fullWidth: true,\n    margin: \"normal\",\n    type: \"text\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, handleDynamicSearch().map(song =>\n  /*#__PURE__*/\n\n  /* There might be a more performant way to achieve this ... */\n  React.createElement(Song, {\n    key: song.id,\n    song: song,\n    inPlaylist: isInPlaylist(song),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction Song({\n  song,\n  inPlaylist\n}) {\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\n  const {\n    state,\n    dispatch\n  } = React.useContext(SongContext);\n  const classes = useStyles();\n  const [addOrRemoveFromPlaylist] = useMutation(REMOVE_OR_ADD_FROM_PLAYLIST, {\n    onCompleted: data => {\n      localStorage.setItem(\"playlist\", JSON.stringify(data.addOrRemoveFromPlaylist)); //Stores playlist in browser's local storage!\n    }\n  });\n  const {\n    thumbnail,\n    artist,\n    title,\n    id\n  } = song;\n  React.useEffect(() => {\n    const isSongPlaying = state.isPlaying && id === state.song.id;\n    setCurrentSongPlaying(isSongPlaying); //Our dependency array\n  }, [id, state.song.id, state.isPlaying]); // we have to identify given song by ID\n\n  function handleSongPlay() {\n    dispatch({\n      type: \"SET_SONG\",\n      payload: {\n        song\n      }\n    });\n    dispatch(state.isPlaying ? {\n      type: \"PAUSE_SONG\"\n    } : {\n      type: \"PLAY_SONG\"\n    });\n  }\n\n  function handleRemoveOrAddFromPlaylist() {\n    addOrRemoveFromPlaylist({\n      variables: {\n        input: { ...song,\n          __typename: \"Song\"\n        }\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.containerSongList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.songInfoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.thumbnail,\n    image: thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.songInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    component: \"p\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, artist)), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleSongPlay,\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, currentSongPlaying ? /*#__PURE__*/React.createElement(Pause, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(PlayArrow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleRemoveOrAddFromPlaylist,\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, inPlaylist ? /*#__PURE__*/React.createElement(PlaylistAddCheckIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(PlaylistAddOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }))))));\n}\n\nexport default SongList;","map":{"version":3,"sources":["/home/goncalo/Desktop/FirstTimers/a-pop/src/components/SongList.js"],"names":["React","Card","CardMedia","CardContent","Typography","CardActions","IconButton","makeStyles","TextField","InputAdornment","PlayArrow","Pause","Search","Skeleton","useSubscription","useMutation","useQuery","GET_SONGS","SongContext","REMOVE_OR_ADD_FROM_PLAYLIST","GET_PLAYLIST_SONGS","PlaylistAddOutlinedIcon","PlaylistAddCheckIcon","useStyles","theme","containerSearch","display","alignItems","textInput","margin","spacing","containerSongList","songInfoContainer","songInfo","width","justifyContent","skeletonSongInfo","thumbnail","objectFit","height","SongList","data","loading","error","playlist","classes","searchTerm","setSearchTerm","useState","startAdornment","Array","map","i","SkeletonList","handleEditSearchTerm","sch","target","value","handleDynamicSearch","songs","filter","song","title","toLowerCase","includes","isInPlaylist","id","idRef","some","Song","inPlaylist","currentSongPlaying","setCurrentSongPlaying","state","dispatch","useContext","addOrRemoveFromPlaylist","onCompleted","localStorage","setItem","JSON","stringify","artist","useEffect","isSongPlaying","isPlaying","handleSongPlay","type","payload","handleRemoveOrAddFromPlaylist","variables","input","__typename"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  IconButton,\n  makeStyles,\n  TextField,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { PlayArrow, Pause, Search } from \"@material-ui/icons\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useSubscription, useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { GET_SONGS } from \"../graphql/subscriptions\";\nimport { SongContext } from \"../App\";\nimport { REMOVE_OR_ADD_FROM_PLAYLIST } from \"../graphql/mutations\";\nimport { GET_PLAYLIST_SONGS } from \"../graphql/queries\";\nimport PlaylistAddOutlinedIcon from \"@material-ui/icons/PlaylistAddOutlined\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\n\nconst useStyles = makeStyles((theme) => ({\n  containerSearch: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  textInput: {\n    margin: theme.spacing(1),\n  },\n  containerSongList: {\n    margin: theme.spacing(3),\n  },\n  songInfoContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  songInfo: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  skeletonSongInfo: {\n    width: \"100%\",\n    justifyContent: \"space-between\",\n  },\n  thumbnail: {\n    objectFit: \"cover\",\n    width: 140,\n    height: 140,\n  },\n}));\n\nfunction SongList() {\n  //But now we are subscribing to new data changes\n  const { data, loading, error } = useSubscription(GET_SONGS);\n  const {\n    data: { playlist },\n  } = useQuery(GET_PLAYLIST_SONGS);\n  const classes = useStyles();\n\n  // Integrating Search bar inside SongList component\n  // for easier functionality / Implementation\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n  // const song = {\n  //     title: 'Abhishek',\n  //     artist: 'Naidu',\n  //     thumbnail: 'https://avatars0.githubusercontent.com/u/55599878?s=460&u=ed7ab421e2b7b0fdc9fd0ddeae2f73feeb72eede&v=4'\n  // }\n\n  if (error) {\n    return <div>Error fetching songs</div>;\n  }\n\n  if (loading) {\n    return (\n      <React.Fragment>\n        <div className={classes.containerSearch}>\n          <TextField\n            className={classes.textInput}\n            placeholder=\"Search for a song by name!\"\n            fullWidth\n            margin=\"normal\"\n            type=\"text\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Search />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </div>\n        {[...Array(50)].map((i) => (\n          <SkeletonList key={i} />\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  function SkeletonList() {\n    return (\n      <div className={classes.containerSongList}>\n        <div className={classes.songInfoContainer}>\n          <Skeleton variant=\"rect\" width={140} height={140}></Skeleton>\n          <div className={classes.skeletonSongInfo}>\n            <CardContent>\n              <Typography component=\"h3\" variant=\"h2\">\n                <Skeleton />\n              </Typography>\n              <Typography component=\"p\" variant=\"h5\">\n                <Skeleton width=\"30%\" />\n              </Typography>\n            </CardContent>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function handleEditSearchTerm(sch) {\n    setSearchTerm(sch.target.value);\n  }\n\n  function handleDynamicSearch() {\n    return data.songs.filter((song) =>\n      song.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }\n\n  function isInPlaylist({ id: idRef }) {\n    return playlist.some((song) => song.id === idRef);\n  }\n\n  return (\n    <React.Fragment>\n      <div className={classes.containerSearch}>\n        {/* <input type='text' placeholder='Search for a song by name!' /> */}\n        <TextField\n          className={classes.textInput}\n          value={searchTerm}\n          onChange={handleEditSearchTerm}\n          placeholder=\"Search for a song by name!\"\n          fullWidth\n          margin=\"normal\"\n          type=\"text\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n      <div>\n        {handleDynamicSearch().map((song) => (\n          /* There might be a more performant way to achieve this ... */\n          <Song key={song.id} song={song} inPlaylist={isInPlaylist(song)} />\n        ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction Song({ song, inPlaylist }) {\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\n  const { state, dispatch } = React.useContext(SongContext);\n  const classes = useStyles();\n  const [addOrRemoveFromPlaylist] = useMutation(REMOVE_OR_ADD_FROM_PLAYLIST, {\n    onCompleted: (data) => {\n      localStorage.setItem(\n        \"playlist\",\n        JSON.stringify(data.addOrRemoveFromPlaylist)\n      ); //Stores playlist in browser's local storage!\n    },\n  });\n  const { thumbnail, artist, title, id } = song;\n\n  React.useEffect(() => {\n    const isSongPlaying = state.isPlaying && id === state.song.id;\n    setCurrentSongPlaying(isSongPlaying);\n    //Our dependency array\n  }, [id, state.song.id, state.isPlaying]); // we have to identify given song by ID\n\n  function handleSongPlay() {\n    dispatch({ type: \"SET_SONG\", payload: { song } });\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\n  }\n\n  function handleRemoveOrAddFromPlaylist() {\n    addOrRemoveFromPlaylist({\n      variables: { input: { ...song, __typename: \"Song\" } },\n    });\n  }\n\n  return (\n    <Card className={classes.containerSongList}>\n      <div className={classes.songInfoContainer}>\n        <CardMedia className={classes.thumbnail} image={thumbnail} />\n        <div className={classes.songInfo}>\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\n              {artist}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <IconButton onClick={handleSongPlay} size=\"small\" color=\"primary\">\n              {/* here, everyone in the song list, are getting updated, \n                            but we just need the appropriate one to get updated \n                            so we can check for that using useEffects */}\n              {currentSongPlaying ? <Pause /> : <PlayArrow />}\n            </IconButton>\n            <IconButton\n              onClick={handleRemoveOrAddFromPlaylist}\n              size=\"small\"\n              color=\"primary\"\n            >\n              {inPlaylist ? (\n                <PlaylistAddCheckIcon />\n              ) : (\n                <PlaylistAddOutlinedIcon />\n              )}\n            </IconButton>\n          </CardActions>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nexport default SongList;\n"]},"metadata":{},"sourceType":"module"}