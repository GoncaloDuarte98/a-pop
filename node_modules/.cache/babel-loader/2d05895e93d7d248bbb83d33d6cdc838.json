{"ast":null,"code":"var _jsxFileName = \"/home/goncalo/Desktop/FirstTimers/a-pop/src/components/AddSong.js\";\nimport React from \"react\";\nimport { TextField, InputAdornment, Button, Dialog, DialogContent, DialogTitle, DialogActions, makeStyles } from \"@material-ui/core\";\nimport { Link, AddBoxOutlined } from \"@material-ui/icons\";\nimport ReactPlayer from \"react-player\";\nimport Soundcloud from \"react-player/lib/players/SoundCloud\";\nimport YoutubePlayer from \"react-player/lib/players/YouTube\";\nimport { useMutation, useSubscription } from \"@apollo/react-hooks\";\nimport { ADD_SONG } from \"../graphql/mutations\";\nimport { GET_SONGS } from \"../graphql/subscriptions\";\nimport swal from \"sweetalert\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  urlInput: {\n    margin: theme.spacing(1)\n  },\n  addSongButton: {\n    margin: theme.spacing(1)\n  },\n  dialog: {\n    textAlign: \"center\"\n  },\n  thumbnail: {\n    width: \"90%\"\n  }\n}));\n\nfunction AddSong() {\n  const classes = useStyles(); // Returns Mutate function\n\n  const [addSong, {\n    error\n  }] = useMutation(ADD_SONG);\n  const [url, setUrl] = React.useState(\"\");\n  const [dialog, showDialog] = React.useState(false);\n  const [playable, setPlayable] = React.useState(false);\n  const {\n    data\n  } = useSubscription(GET_SONGS);\n  const [song, setSong] = React.useState({\n    title: \"\",\n    artist: \"\",\n    thumbnail: \"\",\n    duration: 0\n  });\n\n  async function handleEditSong({\n    player\n  }) {\n    const nestedPlayer = player.player.player;\n    let songDetails;\n\n    if (nestedPlayer.getVideoData) {\n      songDetails = getYoutubeInfo(nestedPlayer);\n    } else if (nestedPlayer.getCurrentSound) {\n      songDetails = await getSoundcloudInfo(nestedPlayer);\n    }\n\n    setSong({ ...songDetails,\n      url\n    });\n  }\n\n  function getYoutubeInfo(player) {\n    const {\n      title,\n      video_id,\n      author\n    } = player.getVideoData();\n    const duration = player.getDuration();\n    const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\n    return {\n      title,\n      artist: author,\n      video_id,\n      duration,\n      thumbnail\n    };\n  }\n\n  function getSoundcloudInfo(player) {\n    return new Promise(resolve => {\n      player.getCurrentSound(songDetails => {\n        if (songDetails) {\n          resolve({\n            duration: Number(songDetails.duration / 1000),\n            // Convert into sec from ms\n            title: songDetails.title,\n            artist: songDetails.user.username,\n            thumbnail: songDetails.artwork_url.replace(\"-large\", \"-t500x500\")\n          });\n        }\n      });\n    });\n  }\n\n  function handleSongDetails(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setSong(prevSongDetails => ({ ...prevSongDetails,\n      // Using computed property syntax, we can dyanamically update the syntax\n      // where name is set to value\n      [name]: value\n    }));\n  }\n\n  async function handleAddSong() {\n    // One Approach, but its not gonna helps in catching the errors!\n    // like the exclamations condition added to the end of the every mutation objects\n    // addSong({ variables: { ...song}})\n    try {\n      const {\n        url,\n        thumbnail,\n        duration,\n        title,\n        artist\n      } = song;\n      await addSong({\n        variables: {\n          url: url.length > 0 ? url : null,\n          duration: duration > 0 ? duration : null,\n          thumbnail: thumbnail.length > 0 ? thumbnail : null,\n          artist: artist.length > 0 ? artist : null,\n          title: title.length > 0 ? title : null\n        }\n      });\n      handleCloseDialog();\n      setSong({\n        title: \"\",\n        artist: \"\",\n        thumbnail: \"\",\n        duration: 0\n      });\n      setUrl(\"\");\n    } catch (error) {\n      console.error(\"Error adding Song\", error);\n    }\n  } // either title, artist, thumbnail field\n\n\n  function handleInputError(field) {\n    var _error$networkError, _error$networkError$e;\n\n    // return only if there is a error\n    // return error && error.graphQLErrors[0].extensions.path.includes(field)\n    return error === null || error === void 0 ? void 0 : (_error$networkError = error.networkError) === null || _error$networkError === void 0 ? void 0 : (_error$networkError$e = _error$networkError.extensions) === null || _error$networkError$e === void 0 ? void 0 : _error$networkError$e.path.includes(field);\n  } //Check whether this song is playable or not,\n\n\n  React.useEffect(() => {\n    const isPlayable = YoutubePlayer.canPlay(url) || Soundcloud.canPlay(url);\n    setPlayable(isPlayable);\n  }, [url]); // its gonna be dependent and sync with the url\n\n  function handleCloseDialog() {\n    showDialog(false);\n  }\n\n  function handleShowDialogBox() {\n    let flag = 0;\n    data.songs.forEach(element => {\n      if (element.url === url) {\n        flag = 1;\n      }\n    });\n    flag === 1 ? swal(\"Oops\", \"Song is already present in list!!\", \"error\") : showDialog(true);\n  }\n\n  const {\n    thumbnail,\n    artist,\n    title\n  } = song; // console.dir(error)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    className: classes.dialog,\n    open: dialog,\n    onClose: handleCloseDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \" Edit Song \"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: thumbnail,\n    alt: \"Song thumbnail\",\n    className: classes.thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    value: title,\n    margin: \"dense\",\n    name: \"title\",\n    onChange: handleSongDetails,\n    error: handleInputError(\"title\"),\n    helperText: handleInputError(\"title\") && \"Fill out the title field\",\n    label: \"Title\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    value: artist,\n    margin: \"dense\",\n    name: \"artist\",\n    error: handleInputError(\"artist\"),\n    helperText: handleInputError(\"artist\") && \"Fill out the artist field\",\n    onChange: handleSongDetails,\n    label: \"Artist\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    value: thumbnail,\n    margin: \"dense\",\n    name: \"thumbnail\",\n    error: handleInputError(\"thumbnail\"),\n    helperText: handleInputError(\"thumbnail\") && \"Fill out the thumbnail field\",\n    onChange: handleSongDetails,\n    label: \"Thubmnail\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleCloseDialog,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleAddSong,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, \"Add Song\"))), /*#__PURE__*/React.createElement(TextField, {\n    onChange: event => setUrl(event.target.value),\n    value: url // making control, to be able to clear out the form easily\n    ,\n    className: classes.urlInput,\n    placeholder: \"Add either Youtube \\uD83D\\uDCF9 or Soundcloud \\uD83C\\uDFB6 Url \",\n    fullWidth: true,\n    margin: \"normal\",\n    type: \"url\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !playable,\n    className: classes.addSongButton,\n    onClick: handleShowDialogBox,\n    variant: \"contained\",\n    color: \"secondary\",\n    endIcon: /*#__PURE__*/React.createElement(AddBoxOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 18\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: url,\n    hidden: true,\n    onReady: handleEditSong,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default AddSong;","map":{"version":3,"sources":["/home/goncalo/Desktop/FirstTimers/a-pop/src/components/AddSong.js"],"names":["React","TextField","InputAdornment","Button","Dialog","DialogContent","DialogTitle","DialogActions","makeStyles","Link","AddBoxOutlined","ReactPlayer","Soundcloud","YoutubePlayer","useMutation","useSubscription","ADD_SONG","GET_SONGS","swal","useStyles","theme","container","display","alignItems","urlInput","margin","spacing","addSongButton","dialog","textAlign","thumbnail","width","AddSong","classes","addSong","error","url","setUrl","useState","showDialog","playable","setPlayable","data","song","setSong","title","artist","duration","handleEditSong","player","nestedPlayer","songDetails","getVideoData","getYoutubeInfo","getCurrentSound","getSoundcloudInfo","video_id","author","getDuration","Promise","resolve","Number","user","username","artwork_url","replace","handleSongDetails","event","name","value","target","prevSongDetails","handleAddSong","variables","length","handleCloseDialog","console","handleInputError","field","networkError","extensions","path","includes","useEffect","isPlayable","canPlay","handleShowDialogBox","flag","songs","forEach","element","startAdornment"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  TextField,\n  InputAdornment,\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Link, AddBoxOutlined } from \"@material-ui/icons\";\nimport ReactPlayer from \"react-player\";\nimport Soundcloud from \"react-player/lib/players/SoundCloud\";\nimport YoutubePlayer from \"react-player/lib/players/YouTube\";\nimport { useMutation, useSubscription } from \"@apollo/react-hooks\";\nimport { ADD_SONG } from \"../graphql/mutations\";\nimport { GET_SONGS } from \"../graphql/subscriptions\";\nimport swal from \"sweetalert\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  urlInput: {\n    margin: theme.spacing(1),\n  },\n  addSongButton: {\n    margin: theme.spacing(1),\n  },\n  dialog: {\n    textAlign: \"center\",\n  },\n  thumbnail: {\n    width: \"90%\",\n  },\n}));\n\nfunction AddSong() {\n  const classes = useStyles();\n  // Returns Mutate function\n  const [addSong, { error }] = useMutation(ADD_SONG);\n  const [url, setUrl] = React.useState(\"\");\n  const [dialog, showDialog] = React.useState(false);\n  const [playable, setPlayable] = React.useState(false);\n  const { data } = useSubscription(GET_SONGS);\n  const [song, setSong] = React.useState({\n    title: \"\",\n    artist: \"\",\n    thumbnail: \"\",\n    duration: 0,\n  });\n\n  async function handleEditSong({ player }) {\n    const nestedPlayer = player.player.player;\n    let songDetails;\n    if (nestedPlayer.getVideoData) {\n      songDetails = getYoutubeInfo(nestedPlayer);\n    } else if (nestedPlayer.getCurrentSound) {\n      songDetails = await getSoundcloudInfo(nestedPlayer);\n    }\n    setSong({ ...songDetails, url });\n  }\n\n  function getYoutubeInfo(player) {\n    const { title, video_id, author } = player.getVideoData();\n    const duration = player.getDuration();\n    const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\n    return {\n      title,\n      artist: author,\n      video_id,\n      duration,\n      thumbnail,\n    };\n  }\n\n  function getSoundcloudInfo(player) {\n    return new Promise((resolve) => {\n      player.getCurrentSound((songDetails) => {\n        if (songDetails) {\n          resolve({\n            duration: Number(songDetails.duration / 1000), // Convert into sec from ms\n            title: songDetails.title,\n            artist: songDetails.user.username,\n            thumbnail: songDetails.artwork_url.replace(\"-large\", \"-t500x500\"),\n          });\n        }\n      });\n    });\n  }\n\n  function handleSongDetails(event) {\n    const { name, value } = event.target;\n    setSong((prevSongDetails) => ({\n      ...prevSongDetails,\n      // Using computed property syntax, we can dyanamically update the syntax\n      // where name is set to value\n      [name]: value,\n    }));\n  }\n\n  async function handleAddSong() {\n    // One Approach, but its not gonna helps in catching the errors!\n    // like the exclamations condition added to the end of the every mutation objects\n    // addSong({ variables: { ...song}})\n\n    try {\n      const { url, thumbnail, duration, title, artist } = song;\n      await addSong({\n        variables: {\n          url: url.length > 0 ? url : null,\n          duration: duration > 0 ? duration : null,\n          thumbnail: thumbnail.length > 0 ? thumbnail : null,\n          artist: artist.length > 0 ? artist : null,\n          title: title.length > 0 ? title : null,\n        },\n      });\n      handleCloseDialog();\n      setSong({\n        title: \"\",\n        artist: \"\",\n        thumbnail: \"\",\n        duration: 0,\n      });\n      setUrl(\"\");\n    } catch (error) {\n      console.error(\"Error adding Song\", error);\n    }\n  }\n  // either title, artist, thumbnail field\n  function handleInputError(field) {\n    // return only if there is a error\n    // return error && error.graphQLErrors[0].extensions.path.includes(field)\n    return error?.networkError?.extensions?.path.includes(field);\n  }\n\n  //Check whether this song is playable or not,\n  React.useEffect(() => {\n    const isPlayable = YoutubePlayer.canPlay(url) || Soundcloud.canPlay(url);\n    setPlayable(isPlayable);\n  }, [url]); // its gonna be dependent and sync with the url\n\n  function handleCloseDialog() {\n    showDialog(false);\n  }\n\n  function handleShowDialogBox() {\n    let flag = 0;\n    data.songs.forEach((element) => {\n      if (element.url === url) {\n        flag = 1;\n      }\n    });\n    flag === 1\n      ? swal(\"Oops\", \"Song is already present in list!!\", \"error\")\n      : showDialog(true);\n  }\n\n  const { thumbnail, artist, title } = song;\n  // console.dir(error)\n  return (\n    <div className={classes.container}>\n      <Dialog\n        className={classes.dialog}\n        open={dialog}\n        onClose={handleCloseDialog}\n      >\n        <DialogTitle> Edit Song </DialogTitle>\n        <DialogContent>\n          <img\n            src={thumbnail}\n            alt=\"Song thumbnail\"\n            className={classes.thumbnail}\n          />\n          <TextField\n            value={title}\n            margin=\"dense\"\n            name=\"title\"\n            onChange={handleSongDetails}\n            error={handleInputError(\"title\")}\n            helperText={handleInputError(\"title\") && \"Fill out the title field\"}\n            label=\"Title\"\n            fullWidth\n          />\n          <TextField\n            value={artist}\n            margin=\"dense\"\n            name=\"artist\"\n            error={handleInputError(\"artist\")}\n            helperText={\n              handleInputError(\"artist\") && \"Fill out the artist field\"\n            }\n            onChange={handleSongDetails}\n            label=\"Artist\"\n            fullWidth\n          />\n          <TextField\n            value={thumbnail}\n            margin=\"dense\"\n            name=\"thumbnail\"\n            error={handleInputError(\"thumbnail\")}\n            helperText={\n              handleInputError(\"thumbnail\") && \"Fill out the thumbnail field\"\n            }\n            onChange={handleSongDetails}\n            label=\"Thubmnail\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={handleAddSong} variant=\"outlined\">\n            Add Song\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TextField\n        onChange={(event) => setUrl(event.target.value)}\n        value={url} // making control, to be able to clear out the form easily\n        className={classes.urlInput}\n        placeholder=\"Add either Youtube 📹 or Soundcloud 🎶 Url \"\n        fullWidth\n        margin=\"normal\"\n        type=\"url\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Link />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <Button\n        disabled={!playable}\n        className={classes.addSongButton}\n        onClick={handleShowDialogBox}\n        variant=\"contained\"\n        color=\"secondary\"\n        endIcon={<AddBoxOutlined />}\n      >\n        Add\n      </Button>\n      {/* onReady will give us all the Songdetails when the react player is loaded\n    on the url */}\n      <ReactPlayer url={url} hidden onReady={handleEditSong} />\n    </div>\n  );\n}\n\nexport default AddSong;\n"]},"metadata":{},"sourceType":"module"}