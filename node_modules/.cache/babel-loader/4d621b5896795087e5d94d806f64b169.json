{"ast":null,"code":"var _jsxFileName = \"/home/goncalo/Desktop/FirstTimers/a-pop/src/components/Playlist.js\";\nimport React from \"react\";\nimport { Card, Typography, Avatar, IconButton, makeStyles, useMediaQuery } from \"@material-ui/core\";\nimport { Delete, PlayArrow, Pause } from \"@material-ui/icons\";\nimport { SongContext } from \"../App\";\nimport { REMOVE_OR_ADD_FROM_PLAYLIST } from \"../graphql/mutations\";\nimport { useMutation } from \"@apollo/react-hooks\";\nconst useStyles = makeStyles({\n  container: {\n    display: \"grid\",\n    gridAutoFlow: \"column\",\n    gridTemplateColumns: \"50px auto 50px 50px\",\n    gridGap: 12,\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  avator: {\n    width: 44,\n    height: 44\n  },\n  text: {\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\"\n  },\n  songInfoContainer: {\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\"\n  }\n});\n\nfunction Playlist({\n  playlist\n}) {\n  // console.log( {playlist} )\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up(\"md\")); // const song = {\n  //     title: 'Abhishek',\n  //     artist: 'Naidu',\n  //     thumbnail: 'https://avatars0.githubusercontent.com/u/55599878?s=460&u=ed7ab421e2b7b0fdc9fd0ddeae2f73feeb72eede&v=4'\n  // }\n\n  if (greaterThanMd) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"10px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"textSecondary\",\n      variant: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"PLAYLIST (\", playlist.length, \")\"), playlist.map((song, i) => /*#__PURE__*/React.createElement(PlaylistSong, {\n      key: i,\n      song: song,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"10px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"inherit\",\n      variant: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"PLAYLIST (\", playlist.length, \")\"), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        height: \"240px\",\n        overflow: \"scroll\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, playlist.map((song, i) => /*#__PURE__*/React.createElement(PlaylistSong, {\n      key: i,\n      song: song,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }))));\n  }\n}\n\nfunction PlaylistSong({\n  song\n}) {\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\n  const {\n    state,\n    dispatch\n  } = React.useContext(SongContext);\n  const classes = useStyles();\n  const [addOrRemoveFromPlaylist] = useMutation(REMOVE_OR_ADD_FROM_PLAYLIST, {\n    onCompleted: data => {\n      localStorage.setItem(\"playlist\", JSON.stringify(data.addOrRemoveFromPlaylist)); //Stores playlist in browser's local storage!\n    }\n  });\n  const {\n    thumbnail,\n    artist,\n    title,\n    id\n  } = song;\n  React.useEffect(() => {\n    const isSongPlaying = state.isPlaying && id === state.song.id;\n    setCurrentSongPlaying(isSongPlaying); //Our dependency array\n  }, [id, state.song.id, state.isPlaying]); // we have to identify given song by ID\n\n  function handleSongPlay() {\n    dispatch({\n      type: \"SET_SONG\",\n      payload: {\n        song\n      }\n    });\n    dispatch(state.isPlaying ? {\n      type: \"PAUSE_SONG\"\n    } : {\n      type: \"PLAY_SONG\"\n    });\n  }\n\n  function handleRemoveOrAddFromPlaylist() {\n    addOrRemoveFromPlaylist({\n      variables: {\n        input: { ...song,\n          __typename: \"Song\"\n        }\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avator,\n    src: thumbnail,\n    alt: \"Song Thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.songInfoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    variant: \"subtitile2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    color: \"textSecondary\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, artist)), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleSongPlay,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, currentSongPlaying ? /*#__PURE__*/React.createElement(Pause, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(PlayArrow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 43\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleRemoveOrAddFromPlaylist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Delete, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Playlist;","map":{"version":3,"sources":["/home/goncalo/Desktop/FirstTimers/a-pop/src/components/Playlist.js"],"names":["React","Card","Typography","Avatar","IconButton","makeStyles","useMediaQuery","Delete","PlayArrow","Pause","SongContext","REMOVE_OR_ADD_FROM_PLAYLIST","useMutation","useStyles","container","display","gridAutoFlow","gridTemplateColumns","gridGap","alignItems","marginTop","avator","width","height","text","textOverflow","overflow","songInfoContainer","whiteSpace","Playlist","playlist","greaterThanMd","theme","breakpoints","up","margin","length","map","song","i","PlaylistSong","currentSongPlaying","setCurrentSongPlaying","useState","state","dispatch","useContext","classes","addOrRemoveFromPlaylist","onCompleted","data","localStorage","setItem","JSON","stringify","thumbnail","artist","title","id","useEffect","isSongPlaying","isPlaying","handleSongPlay","type","payload","handleRemoveOrAddFromPlaylist","variables","input","__typename"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  Typography,\n  Avatar,\n  IconButton,\n  makeStyles,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { Delete, PlayArrow, Pause } from \"@material-ui/icons\";\nimport { SongContext } from \"../App\";\nimport { REMOVE_OR_ADD_FROM_PLAYLIST } from \"../graphql/mutations\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"grid\",\n    gridAutoFlow: \"column\",\n    gridTemplateColumns: \"50px auto 50px 50px\",\n    gridGap: 12,\n    alignItems: \"center\",\n    marginTop: 10,\n  },\n  avator: {\n    width: 44,\n    height: 44,\n  },\n  text: {\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n  },\n  songInfoContainer: {\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n  },\n});\n\nfunction Playlist({ playlist }) {\n  // console.log( {playlist} )\n  const greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\n\n  // const song = {\n  //     title: 'Abhishek',\n  //     artist: 'Naidu',\n  //     thumbnail: 'https://avatars0.githubusercontent.com/u/55599878?s=460&u=ed7ab421e2b7b0fdc9fd0ddeae2f73feeb72eede&v=4'\n  // }\n\n  if (greaterThanMd) {\n    return (\n      <div style={{ margin: \"10px 0\" }}>\n        <Typography color=\"textSecondary\" variant=\"button\">\n          PLAYLIST ({playlist.length})\n        </Typography>\n        {playlist.map((song, i) => (\n          <PlaylistSong key={i} song={song} />\n        ))}\n      </div>\n    );\n  } else {\n    return (\n      <div style={{ margin: \"10px 0\" }}>\n        <Typography color=\"inherit\" variant=\"button\">\n          PLAYLIST ({playlist.length})\n        </Typography>\n        <Card style={{ height: \"240px\", overflow: \"scroll\" }}>\n          {playlist.map((song, i) => (\n            <PlaylistSong key={i} song={song} />\n          ))}\n        </Card>\n      </div>\n    );\n  }\n}\n\nfunction PlaylistSong({ song }) {\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\n  const { state, dispatch } = React.useContext(SongContext);\n\n  const classes = useStyles();\n  const [addOrRemoveFromPlaylist] = useMutation(REMOVE_OR_ADD_FROM_PLAYLIST, {\n    onCompleted: (data) => {\n      localStorage.setItem(\n        \"playlist\",\n        JSON.stringify(data.addOrRemoveFromPlaylist)\n      ); //Stores playlist in browser's local storage!\n    },\n  });\n  const { thumbnail, artist, title, id } = song;\n  React.useEffect(() => {\n    const isSongPlaying = state.isPlaying && id === state.song.id;\n    setCurrentSongPlaying(isSongPlaying);\n    //Our dependency array\n  }, [id, state.song.id, state.isPlaying]); // we have to identify given song by ID\n\n  function handleSongPlay() {\n    dispatch({ type: \"SET_SONG\", payload: { song } });\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\n  }\n\n  function handleRemoveOrAddFromPlaylist() {\n    addOrRemoveFromPlaylist({\n      variables: { input: { ...song, __typename: \"Song\" } },\n    });\n  }\n\n  return (\n    <div className={classes.container}>\n      <Avatar className={classes.avator} src={thumbnail} alt=\"Song Thumbnail\" />\n      <div className={classes.songInfoContainer}>\n        <Typography className={classes.text} variant=\"subtitile2\">\n          {title}\n        </Typography>\n        <Typography\n          className={classes.text}\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {artist}\n        </Typography>\n      </div>\n      <IconButton onClick={handleSongPlay} color=\"primary\">\n        {currentSongPlaying ? <Pause /> : <PlayArrow />}\n      </IconButton>\n      <IconButton onClick={handleRemoveOrAddFromPlaylist}>\n        <Delete color=\"warning\" />\n      </IconButton>\n    </div>\n  );\n}\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}